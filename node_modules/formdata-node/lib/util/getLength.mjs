import _asyncToGenerator from "@babel/runtime-corejs3/helpers/asyncToGenerator";
import fs from "promise-fs";
import isReadStream from "./isReadStream";
import isStream from "./isStream";
import isBuffer from "./isBuffer";
import isBlob from "./isBlob";
/**
 * Get lenght of given value (in bytes)
 *
 * @param {any} value
 *
 * @return {number | undefined}
 *
 * @api private
 */

function getLength(_x) {
  return _getLength.apply(this, arguments);
}

function _getLength() {
  _getLength = _asyncToGenerator(function* (value) {
    if (isStream(value)) {
      if (!isReadStream(value)) {
        return undefined;
      }

      return fs.stat(value.path).then(({
        size
      }) => size);
    }

    if (isBuffer(value)) {
      return value.length;
    }

    if (isBlob(value)) {
      return value.size;
    }

    return Buffer.from(String(value)).length;
  });
  return _getLength.apply(this, arguments);
}

export default getLength;