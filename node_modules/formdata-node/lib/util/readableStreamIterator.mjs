import _awaitAsyncGenerator from "@babel/runtime-corejs3/helpers/awaitAsyncGenerator";
import _wrapAsyncGenerator from "@babel/runtime-corejs3/helpers/wrapAsyncGenerator";

/**
 * Reads a content from given ReadableStream
 *
 * @yield {any}
 *
 * @api private
 */
function readableStreamIterator(_x) {
  return _readableStreamIterator.apply(this, arguments);
}

function _readableStreamIterator() {
  _readableStreamIterator = _wrapAsyncGenerator(function* (reader) {
    while (true) {
      const {
        done,
        value
      } = yield _awaitAsyncGenerator(reader.read());

      if (done) {
        return value;
      }

      yield value;
    }
  });
  return _readableStreamIterator.apply(this, arguments);
}

export default readableStreamIterator;